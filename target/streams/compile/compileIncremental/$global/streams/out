[0m[[0m[0mdebug[0m] [0m[0mInvalidating C:\Users\kayla\.ivy2\cache\com.typesafe.play\twirl-api_2.12\jars\twirl-api_2.12-1.3.14.jar: class play.twirl.api.Html now provided by C:\Users\kayla\.ivy2\cache\com.typesafe.play\twirl-api_2.12\jars\twirl-api_2.12-1.3.15.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSCanvas.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\services\ApplicationTimer.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\javascript\JavaScriptReverseRoutes.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSParticleAction.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\router\Routes.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSMessage.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\particlesim.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\controllers\PSController.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\actors\WSManager.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\routes.java, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\router\RoutesPrefix.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\main.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\Module.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\actors\WSActor.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\filters\ExampleFilter.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSUser.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\controllers\WSController.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\services\Counter.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\ReverseRoutes.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\controllers\routes.java, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\services\ApplicationTimer.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\router\Routes.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\Message.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\controllers\PSController.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\controllers\LoginController.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\Tables.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\Canvas.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\twirl\main\views\html\main.template.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\controllers\ReverseRoutes.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\ParticleAction.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\services\Counter.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\filters\ExampleFilter.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\actors\WSManager.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\router\RoutesPrefix.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\User.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\twirl\main\views\html\login.template.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\controllers\javascript\JavaScriptReverseRoutes.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\twirl\main\views\html\particlesim.template.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\actors\WSActor.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\controllers\WSController.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\Module.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\router\Routes.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSCanvas.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$BroadcastMessage$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSMessage$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$BroadcastMessage.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\views\html\particlesim$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\routes$javascript.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\javascript\ReverseWSController.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSActor$MessageOut$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$NewActor$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\ReversePSController.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSActor$MessageOut.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$RemoveActor.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSActor$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSParticleAction.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSMessage.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\router\Routes$$anonfun$routes$1.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\views\html\main.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\ReverseWSController.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\services\Counter.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\services\ApplicationTimer.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\views\html\particlesim.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\services\AtomicCounter.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSUser.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\views\html\main$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\javascript\ReverseAssets.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\javascript\ReversePSController.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\PSController.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\WSController.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$NewActor.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\Module.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\ReverseAssets.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSActor$$anonfun$receive$1.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSParticleAction$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\router\RoutesPrefix$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSMessage$Types$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSCanvas$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSActor.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\router\RoutesPrefix.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\filters\ExampleFilter.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$RemoveActor$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\controllers\routes.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSActor$WSActorRef.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSParticleAction$Types$.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\actors\WSManager$$anonfun$receive$1.class, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\classes\models\PSUser$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(C:\Users\kayla\.ivy2\cache\com.typesafe.play\twirl-api_2.12\jars\twirl-api_2.12-1.3.14.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(actors.WSManager.BroadcastMessage, actors.WSManager.NewActor, actors.WSActor, actors.WSActor.MessageOut, controllers.ReverseAssets, actors.WSManager.RemoveActor, controllers.routes.javascript, controllers.ReverseWSController, services.ApplicationTimer, models.PSMessage.Types, models.PSParticleAction, models.PSUser, controllers.routes, views.html.main, router.Routes, models.PSParticleAction.Types, actors.WSManager, controllers.javascript.ReversePSController, actors.WSActor.WSActorRef, controllers.ReversePSController, controllers.javascript.ReverseAssets, controllers.WSController, models.PSCanvas, controllers.javascript.ReverseWSController, services.Counter, views.html.particlesim, controllers.PSController, router.RoutesPrefix, models.PSMessage, services.AtomicCounter, filters.ExampleFilter, Module)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSCanvas.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\services\ApplicationTimer.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\javascript\JavaScriptReverseRoutes.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSParticleAction.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\router\Routes.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSMessage.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\particlesim.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\controllers\PSController.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\actors\WSManager.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\routes.java, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\router\RoutesPrefix.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\main.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\Module.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\actors\WSActor.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\filters\ExampleFilter.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSUser.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\controllers\WSController.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\services\Counter.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\ReverseRoutes.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\particlesim.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\controllers\PSController.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\main.template.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(actors.WSManager.BroadcastMessage, actors.WSManager.NewActor, actors.WSActor, actors.WSActor.MessageOut, controllers.ReverseAssets, actors.WSManager.RemoveActor, controllers.routes.javascript, controllers.ReverseWSController, services.ApplicationTimer, models.PSMessage.Types, models.PSParticleAction, models.PSUser, controllers.routes, views.html.main, router.Routes, models.PSParticleAction.Types, actors.WSManager, controllers.javascript.ReversePSController, actors.WSActor.WSActorRef, controllers.ReversePSController, controllers.javascript.ReverseAssets, controllers.WSController, models.PSCanvas, controllers.javascript.ReverseWSController, services.Counter, views.html.particlesim, controllers.PSController, router.RoutesPrefix, models.PSMessage, services.AtomicCounter, filters.ExampleFilter, Module)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSCanvas.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\controllers\routes.java, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\services\ApplicationTimer.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\router\Routes.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\Message.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\controllers\PSController.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\services\ApplicationTimer.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\controllers\LoginController.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\Tables.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\javascript\JavaScriptReverseRoutes.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\Canvas.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\twirl\main\views\html\main.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSParticleAction.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\router\Routes.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSMessage.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\particlesim.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\controllers\PSController.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\controllers\ReverseRoutes.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\actors\WSManager.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\ParticleAction.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\services\Counter.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\routes.java, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\filters\ExampleFilter.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\actors\WSManager.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\router\RoutesPrefix.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\router\RoutesPrefix.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\twirl\main\views\html\main.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\Module.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\models\User.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\actors\WSActor.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\filters\ExampleFilter.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\twirl\main\views\html\login.template.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\routes\main\controllers\javascript\JavaScriptReverseRoutes.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\models\PSUser.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\twirl\main\views\html\particlesim.template.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\controllers\WSController.scala, C:\Users\kayla\Documents\WebAppsFallingSand\app\services\Counter.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\actors\WSActor.scala, C:\Users\kayla\Documents\WebAppsFallingSand\target\scala-2.12\routes\main\controllers\ReverseRoutes.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\controllers\WSController.scala, C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\app\Module.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 22 sources: invalidated sources (41) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 21 Scala sources and 1 Java source to C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 24677e11 for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-encoding[0m
[0m[[0m[0mdebug[0m] [0m[0m	utf8[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_162\lib\resources.jar;C:\Program Files\Java\jre1.8.0_162\lib\rt.jar;C:\Program Files\Java\jre1.8.0_162\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_162\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_162\lib\jce.jar;C:\Program Files\Java\jre1.8.0_162\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_162\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_162\classes;C:\Users\kayla\.sbt\boot\scala-2.12.4\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\kayla\Documents\web-apps-project-s18-fallingsand\target\scala-2.12\classes;C:\Users\kayla\.ivy2\cache\org.scala-lang.modules\scala-xml_2.12\bundles\scala-xml_2.12-1.0.6.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-server_2.12\jars\play-server_2.12-2.6.12.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play_2.12\jars\play_2.12-2.6.12.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\build-link\jars\build-link-2.6.12.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-exceptions\jars\play-exceptions-2.6.12.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-netty-utils\jars\play-netty-utils-2.6.12.jar;C:\Users\kayla\.ivy2\cache\org.slf4j\slf4j-api\jars\slf4j-api-1.7.25.jar;C:\Users\kayla\.ivy2\cache\org.slf4j\jul-to-slf4j\jars\jul-to-slf4j-1.7.25.jar;C:\Users\kayla\.ivy2\cache\org.slf4j\jcl-over-slf4j\jars\jcl-over-slf4j-1.7.25.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-streams_2.12\jars\play-streams_2.12-2.6.12.jar;C:\Users\kayla\.ivy2\cache\org.reactivestreams\reactive-streams\jars\reactive-streams-1.0.1.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.akka\akka-stream_2.12\jars\akka-stream_2.12-2.5.11.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.akka\akka-actor_2.12\jars\akka-actor_2.12-2.5.11.jar;C:\Users\kayla\.ivy2\cache\com.typesafe\config\bundles\config-1.3.2.jar;C:\Users\kayla\.ivy2\cache\org.scala-lang.modules\scala-java8-compat_2.12\bundles\scala-java8-compat_2.12-0.8.0.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.akka\akka-protobuf_2.12\jars\akka-protobuf_2.12-2.5.11.jar;C:\Users\kayla\.ivy2\cache\com.typesafe\ssl-config-core_2.12\bundles\ssl-config-core_2.12-0.2.2.jar;C:\Users\kayla\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.0.6.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.akka\akka-slf4j_2.12\jars\akka-slf4j_2.12-2.5.11.jar;C:\Users\kayla\.ivy2\cache\com.fasterxml.jackson.core\jackson-core\bundles\jackson-core-2.8.11.jar;C:\Users\kayla\.ivy2\cache\com.fasterxml.jackson.core\jackson-annotations\bundles\jackson-annotations-2.8.11.jar;C:\Users\kayla\.ivy2\cache\com.fasterxml.jackson.core\jackson-databind\bundles\jackson-databind-2.8.11.jar;C:\Users\kayla\.ivy2\cache\com.fasterxml.jackson.datatype\jackson-datatype-jdk8\bundles\jackson-datatype-jdk8-2.8.11.jar;C:\Users\kayla\.ivy2\cache\com.fasterxml.jackson.datatype\jackson-datatype-jsr310\bundles\jackson-datatype-jsr310-2.8.11.jar;C:\Users\kayla\.ivy2\cache\commons-codec\commons-codec\jars\commons-codec-1.10.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-json_2.12\jars\play-json_2.12-2.6.9.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-functional_2.12\jars\play-functional_2.12-2.6.9.jar;C:\Users\kayla\.sbt\boot\scala-2.12.4\lib\scala-reflect.jar;C:\Users\kayla\.ivy2\cache\org.typelevel\macro-compat_2.12\jars\macro-compat_2.12-1.1.1.jar;C:\Users\kayla\.ivy2\cache\joda-time\joda-time\jars\joda-time-2.9.9.jar;C:\Users\kayla\.ivy2\cache\com.google.guava\guava\bundles\guava-22.0.jar;C:\Users\kayla\.ivy2\cache\com.google.code.findbugs\jsr305\jars\jsr305-1.3.9.jar;C:\Users\kayla\.ivy2\cache\com.google.errorprone\error_prone_annotations\jars\error_prone_annotations-2.0.18.jar;C:\Users\kayla\.ivy2\cache\com.google.j2objc\j2objc-annotations\jars\j2objc-annotations-1.1.jar;C:\Users\kayla\.ivy2\cache\org.codehaus.mojo\animal-sniffer-annotations\jars\animal-sniffer-annotations-1.14.jar;C:\Users\kayla\.ivy2\cache\io.jsonwebtoken\jjwt\jars\jjwt-0.7.0.jar;C:\Users\kayla\.ivy2\cache\org.apache.commons\commons-lang3\jars\commons-lang3-3.6.jar;C:\Users\kayla\.ivy2\cache\javax.transaction\jta\jars\jta-1.1.jar;C:\Users\kayla\.ivy2\cache\javax.inject\javax.inject\jars\javax.inject-1.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\filters-helpers_2.12\jars\filters-helpers_2.12-2.6.12.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-logback_2.12\jars\play-logback_2.12-2.6.12.jar;C:\Users\kayla\.ivy2\cache\ch.qos.logback\logback-classic\jars\logback-classic-1.2.3.jar;C:\Users\kayla\.ivy2\cache\ch.qos.logback\logback-core\jars\logback-core-1.2.3.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-akka-http-server_2.12\jars\play-akka-http-server_2.12-2.6.12.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.akka\akka-http-core_2.12\jars\akka-http-core_2.12-10.0.11.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.akka\akka-parsing_2.12\jars\akka-parsing_2.12-10.0.11.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-guice_2.12\jars\play-guice_2.12-2.6.12.jar;C:\Users\kayla\.ivy2\cache\com.google.inject\guice\jars\guice-4.1.0.jar;C:\Users\kayla\.ivy2\cache\aopalliance\aopalliance\jars\aopalliance-1.0.jar;C:\Users\kayla\.ivy2\cache\com.google.inject.extensions\guice-assistedinject\jars\guice-assistedinject-4.1.0.jar;C:\Users\kayla\.ivy2\cache\com.h2database\h2\jars\h2-1.4.196.jar;C:\Users\kayla\.ivy2\cache\com.vmunier\scalajs-scripts_2.12\jars\scalajs-scripts_2.12-1.1.2.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\twirl-api_2.12\jars\twirl-api_2.12-1.3.15.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-slick_2.12\jars\play-slick_2.12-3.0.0.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.slick\slick-hikaricp_2.12\bundles\slick-hikaricp_2.12-3.2.0.jar;C:\Users\kayla\.ivy2\cache\com.zaxxer\HikariCP\bundles\HikariCP-2.5.1.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-jdbc-api_2.12\jars\play-jdbc-api_2.12-2.6.0.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-slick-evolutions_2.12\jars\play-slick-evolutions_2.12-3.0.0.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.play\play-jdbc-evolutions_2.12\jars\play-jdbc-evolutions_2.12-2.6.0.jar;C:\Users\kayla\.ivy2\cache\mysql\mysql-connector-java\jars\mysql-connector-java-6.0.6.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.slick\slick-codegen_2.12\jars\slick-codegen_2.12-3.2.3.jar;C:\Users\kayla\.ivy2\cache\com.typesafe.slick\slick_2.12\bundles\slick_2.12-3.2.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 7.721141152 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation took 4.408391459 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava analysis took 0.127458357 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation + analysis took 4.595560127 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from controllers.PSController...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(controllers.PSController)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(controllers.PSController)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of router.Routes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(controllers.PSController,ModifiedNames(changes = UsedName(loggedInUser,[Default]))) invalidates 1 classes due to The controllers.PSController has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(loggedInUser,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(controllers.PSController)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.PSParticleAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.PSParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.PSParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.PSParticleAction,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(models;PSParticleAction;init;,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(PSParticleAction,[Default]), UsedName(particleType,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(canvas,[Default]))) invalidates 1 classes due to The models.PSParticleAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(models;PSParticleAction;init;,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(PSParticleAction,[Default]), UsedName(particleType,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(canvas,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.PSParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.AddParticleActionMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.AddParticleActionMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.AddParticleActionMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(AddParticleActionMessage,[Default]), UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.AddParticleActionMessage,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(AddParticleActionMessage,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(models;AddParticleActionMessage;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(particleAction,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The models.AddParticleActionMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(AddParticleActionMessage,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(models;AddParticleActionMessage;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(particleAction,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.AddParticleActionMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.User...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.User)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.User)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.PSController: Set(UsedName(username,[Default]), UsedName(User,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.LoginController: Set(UsedName(username,[Default]), UsedName(User,[Default]), UsedName(password,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.Tables.Users: Set(UsedName(username,[Default]), UsedName(User,[Default]), UsedName(id,[Default]), UsedName(password,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.User,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(models;User;init;,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(username,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(User,[Default]), UsedName(id,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]))) invalidates 4 classes due to The models.User has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(models;User;init;,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(username,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(User,[Default]), UsedName(id,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.User)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.PSController, controllers.LoginController, models.Tables.Users)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from controllers.routes.javascript...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(controllers.routes.javascript)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(controllers.routes.javascript)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(controllers.routes.javascript,ModifiedNames(changes = UsedName(javascript,[Default]), UsedName(Assets,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(controllers;routes$javascript;init;,[Default]), UsedName(WSController,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(PSController,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The controllers.routes.javascript has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(javascript,[Default]), UsedName(Assets,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(controllers;routes$javascript;init;,[Default]), UsedName(WSController,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(PSController,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(controllers.routes.javascript)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.PSParticleAction.Types...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.PSParticleAction.Types)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.PSParticleAction.Types)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.PSParticleAction.Types,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(sand,[Default]), UsedName(clone,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.PSParticleAction.Types has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(sand,[Default]), UsedName(clone,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.PSParticleAction.Types)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.UserQueries...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.UserQueries)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.UserQueries)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.LoginController: Set(UsedName(findByCredentials,[Default]), UsedName(UserQueries,[Default]), UsedName(addUser,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.UserQueries,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(findById,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(removeUser,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(findByCredentials,[Default]), UsedName(UserQueries,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(findByUsername,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(addUser,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The models.UserQueries has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(findById,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(removeUser,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(findByCredentials,[Default]), UsedName(UserQueries,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(findByUsername,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(addUser,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.UserQueries)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.LoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.ParticleAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.ParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.ParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.Canvas: Set(UsedName(ParticleAction,[Default]), UsedName(getParticleActionOptFromJson,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.MessageUtil: Set(UsedName(ParticleAction,[Default]), UsedName(getParticleActionOptFromJson,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.ParticleAction,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(ParticleAction,[Default]), UsedName(getParticleActionOptFromJson,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 3 classes due to The models.ParticleAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(ParticleAction,[Default]), UsedName(getParticleActionOptFromJson,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.ParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(models.Canvas, models.MessageUtil)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.SandParticleAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.SandParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.SandParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.SandParticleAction,ModifiedNames(changes = UsedName(SandParticleAction,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;SandParticleAction;init;,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.SandParticleAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(SandParticleAction,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;SandParticleAction;init;,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.SandParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from controllers.javascript.ReverseLoginController...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(controllers.javascript.ReverseLoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(controllers.javascript.ReverseLoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(controllers.javascript.ReverseLoginController,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ReverseLoginController,[Default]), UsedName(clone,[Default]), UsedName(_defaultPrefix,[Default]), UsedName(logout,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(controllers;javascript;ReverseLoginController;init;,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(login,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(index,[Default]), UsedName(register,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The controllers.javascript.ReverseLoginController has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ReverseLoginController,[Default]), UsedName(clone,[Default]), UsedName(_defaultPrefix,[Default]), UsedName(logout,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(controllers;javascript;ReverseLoginController;init;,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(login,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(index,[Default]), UsedName(register,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(controllers.javascript.ReverseLoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from controllers.ReverseLoginController...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(controllers.ReverseLoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(controllers.ReverseLoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.PSController: Set(UsedName(ReverseLoginController,[Default]), UsedName(index,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of views.html.login: Set(UsedName(ReverseLoginController,[Default]), UsedName(login,[Default]), UsedName(register,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(controllers.ReverseLoginController,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ReverseLoginController,[Default]), UsedName(clone,[Default]), UsedName(_defaultPrefix,[Default]), UsedName(logout,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(controllers;ReverseLoginController;init;,[Default]), UsedName(login,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(index,[Default]), UsedName(register,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 3 classes due to The controllers.ReverseLoginController has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ReverseLoginController,[Default]), UsedName(clone,[Default]), UsedName(_defaultPrefix,[Default]), UsedName(logout,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(controllers;ReverseLoginController;init;,[Default]), UsedName(login,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(index,[Default]), UsedName(register,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(controllers.ReverseLoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.PSController, views.html.login)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.NullParticleAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.NullParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.NullParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.Canvas: Set(UsedName(getJsValue,[Default]), UsedName(models;NullParticleAction;init;,[Default]), UsedName(id,[Default]), UsedName(NullParticleAction,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.NullParticleAction,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(models;NullParticleAction;init;,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(NullParticleAction,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The models.NullParticleAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(models;NullParticleAction;init;,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(NullParticleAction,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.NullParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(models.Canvas)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.AddMemberMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.AddMemberMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.AddMemberMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSManager: Set(UsedName(getJsValue,[Default]), UsedName(AddMemberMessage,[Default]), UsedName(asInstanceOf,[Default]), UsedName(models;AddMemberMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(AddMemberMessage,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.AddMemberMessage,ModifiedNames(changes = UsedName(member,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(AddMemberMessage,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(models;AddMemberMessage;init;,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 3 classes due to The models.AddMemberMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(member,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(AddMemberMessage,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(models;AddMemberMessage;init;,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.AddMemberMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSManager, actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.PSMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.PSMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.PSMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.PSMessage,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getInitSelfMessage,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(getTypeOfMessage,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(PSMessage,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getAddMemberMessage,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(getRemoveMemberMessage,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(getNullMessage,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.PSMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getInitSelfMessage,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(getTypeOfMessage,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(PSMessage,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getAddMemberMessage,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(getRemoveMemberMessage,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(getNullMessage,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.PSMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Canvas...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.Canvas)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Canvas)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.PSController: Set(UsedName(Canvas,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.SyncCanvasMessage: Set(UsedName(getJsValue,[Default]), UsedName(id,[Default]), UsedName(Canvas,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.MessageUtil: Set(UsedName(getCanvasOptFromJson,[Default]), UsedName(Canvas,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Canvas,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addTags,[Default]), UsedName(createCanvas,[Default]), UsedName(clone,[Default]), UsedName(timeCreatedMillis,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(addParticleAction,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(getCanvasOptFromJson,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(addContributor,[Default]), UsedName(==,[Default]), UsedName(Canvas,[Default]), UsedName(notifyAll,[Default]), UsedName(getNextId,[Default]), UsedName(toString,[Default]))) invalidates 4 classes due to The models.Canvas has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addTags,[Default]), UsedName(createCanvas,[Default]), UsedName(clone,[Default]), UsedName(timeCreatedMillis,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(addParticleAction,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(getCanvasOptFromJson,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(addContributor,[Default]), UsedName(==,[Default]), UsedName(Canvas,[Default]), UsedName(notifyAll,[Default]), UsedName(getNextId,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.Canvas)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.PSController, models.SyncCanvasMessage, models.MessageUtil)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.SyncCanvasMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.SyncCanvasMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.SyncCanvasMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(SyncCanvasMessage,[Default]), UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.SyncCanvasMessage,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(SyncCanvasMessage,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(models;SyncCanvasMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(canvas,[Default]))) invalidates 2 classes due to The models.SyncCanvasMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(SyncCanvasMessage,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(models;SyncCanvasMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(canvas,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.SyncCanvasMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.RemoveMemberMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.RemoveMemberMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.RemoveMemberMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSManager: Set(UsedName(RemoveMemberMessage,[Default]), UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(models;RemoveMemberMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(RemoveMemberMessage,[Default]), UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.RemoveMemberMessage,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(RemoveMemberMessage,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(memberId,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(models;RemoveMemberMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 3 classes due to The models.RemoveMemberMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(RemoveMemberMessage,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(memberId,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(models;RemoveMemberMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.RemoveMemberMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSManager, actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.NullMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.NullMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.NullMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(NullMessage,[Default]), UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.NullMessage,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(NullMessage,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(models;NullMessage;init;,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The models.NullMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(NullMessage,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(models;NullMessage;init;,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.NullMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.AbstractMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.AbstractMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.NullMessage by models.AbstractMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.AddMemberMessage by models.AbstractMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.SyncCanvasMessage by models.AbstractMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.RemoveMemberMessage by models.AbstractMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.AddParticleActionMessage by models.AbstractMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.InitSelfMessage by models.AbstractMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.AbstractMessage, models.NullMessage, models.AddMemberMessage, models.SyncCanvasMessage, models.RemoveMemberMessage, models.AddParticleActionMessage, models.InitSelfMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(AbstractMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(AbstractMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSManager: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(AbstractMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(AbstractMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSManager: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(AbstractMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(AbstractMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(AbstractMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.AbstractMessage,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(models;AbstractMessage;init;,[Default]), UsedName(!=,[Default]), UsedName(AbstractMessage,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 9 classes due to The models.AbstractMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(models;AbstractMessage;init;,[Default]), UsedName(!=,[Default]), UsedName(AbstractMessage,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.AbstractMessage, models.NullMessage, models.AddMemberMessage, models.SyncCanvasMessage, models.RemoveMemberMessage, models.AddParticleActionMessage, models.InitSelfMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSActor, actors.WSManager)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.PSCanvas...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.PSCanvas)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.PSCanvas)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.PSCanvas,ModifiedNames(changes = UsedName(ne,[Default]), UsedName(PSCanvas,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addTags,[Default]), UsedName(createCanvas,[Default]), UsedName(clone,[Default]), UsedName(timeCreatedMillis,[Default]), UsedName($isInstanceOf,[Default]), UsedName(addParticleAction,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(addContributor,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(getNextId,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.PSCanvas has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName(PSCanvas,[Default]), UsedName($asInstanceOf,[Default]), UsedName(addTags,[Default]), UsedName(createCanvas,[Default]), UsedName(clone,[Default]), UsedName(timeCreatedMillis,[Default]), UsedName($isInstanceOf,[Default]), UsedName(addParticleAction,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(addContributor,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(getNextId,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.PSCanvas)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from router.Routes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(router.Routes)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(router.Routes)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(router.Routes,ModifiedNames(changes = UsedName(router;Routes;init;,[Default]))) invalidates 1 classes due to The router.Routes has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(router;Routes;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(router.Routes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.AbstractParticleAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.AbstractParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.RockParticleAction by models.AbstractParticleAction[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.WaterParticleAction by models.AbstractParticleAction[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.SandParticleAction by models.AbstractParticleAction[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding models.NullParticleAction by models.AbstractParticleAction[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.NullParticleAction, models.SandParticleAction, models.AbstractParticleAction, models.RockParticleAction, models.WaterParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.Canvas: Set(UsedName(getJsValue,[Default]), UsedName(AbstractParticleAction,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.Canvas: Set(UsedName(getJsValue,[Default]), UsedName(AbstractParticleAction,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.AddParticleActionMessage: Set(UsedName(getJsValue,[Default]), UsedName(AbstractParticleAction,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.MessageUtil: Set(UsedName(AbstractParticleAction,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.AbstractParticleAction,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(models;AbstractParticleAction;init;,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(AbstractParticleAction,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 8 classes due to The models.AbstractParticleAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(models;AbstractParticleAction;init;,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(AbstractParticleAction,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.NullParticleAction, models.SandParticleAction, models.AbstractParticleAction, models.RockParticleAction, models.WaterParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(models.Canvas, models.MessageUtil, models.AddParticleActionMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.UserInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.UserInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.UserInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(models;UserInfo;init;,[Default]), UsedName(UserInfo,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.AddMemberMessage: Set(UsedName(UserInfo,[Default]), UsedName(username,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSManager: Set(UsedName(UserInfo,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.Canvas: Set(UsedName(models;UserInfo;init;,[Default]), UsedName(UserInfo,[Default]), UsedName(username,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor.WSActorRef: Set(UsedName(UserInfo,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.MessageUtil: Set(UsedName(models;UserInfo;init;,[Default]), UsedName(UserInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.InitSelfMessage: Set(UsedName(UserInfo,[Default]), UsedName(username,[Default]), UsedName(id,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.UserInfo,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;UserInfo;init;,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(UserInfo,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(username,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]))) invalidates 8 classes due to The models.UserInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;UserInfo;init;,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(UserInfo,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(username,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.UserInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSActor, models.AddMemberMessage, actors.WSManager, models.Canvas, actors.WSActor.WSActorRef, models.MessageUtil, models.InitSelfMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from controllers.LoginController...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(controllers.LoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(controllers.LoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of controllers.LoginController are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	router.Routes[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(controllers.LoginController,ModifiedNames(changes = UsedName(REQUEST_TIMEOUT,[Default]), UsedName(DATE,[Default]), UsedName(SEE_OTHER,[Default]), UsedName(EXPECT,[Default]), UsedName(supportedLangs,[Implicit]), UsedName(USE_PROXY,[Default]), UsedName(VIA,[Default]), UsedName(NoContent,[Default]), UsedName(AUTHORIZATION,[Default]), UsedName(JSON,[Default]), UsedName(ne,[Default]), UsedName(dbConfigProvider,[Default]), UsedName(InternalServerError,[Default]), UsedName(TE,[Default]), UsedName(ServiceUnavailable,[Default]), UsedName(TRANSFER_ENCODING,[Default]), UsedName(MAX_FORWARDS,[Default]), UsedName(GONE,[Default]), UsedName(Redirect$default$2,[Default]), UsedName(ACCESS_CONTROL_EXPOSE_HEADERS,[Default]), UsedName(X_FORWARDED_HOST,[Default]), UsedName(defaultExecutionContext,[Default]), UsedName($asInstanceOf,[Default]), UsedName(X_FORWARDED_PORT,[Default]), UsedName(VARY,[Default]), UsedName(X_FORWARDED_PROTO,[Default]), UsedName(REQUESTED_RANGE_NOT_SATISFIABLE,[Default]), UsedName(FAILED_DEPENDENCY,[Default]), UsedName(RETRY_AFTER,[Default]), UsedName(LOCATION,[Default]), UsedName(PROXY_AUTHENTICATE,[Default]), UsedName($init$,[Default]), UsedName(Found,[Default]), UsedName(getLoginForm,[Default]), UsedName(SET_COOKIE,[Default]), UsedName(InsufficientStorage,[Default]), UsedName(withCharset,[Default]), UsedName(IF_MODIFIED_SINCE,[Default]), UsedName(MethodNotAllowed,[Default]), UsedName(clone,[Default]), UsedName(WWW_AUTHENTICATE,[Default]), UsedName(CACHE_MANIFEST,[Default]), UsedName(HTML,[Default]), UsedName(RANGE,[Default]), UsedName(CONTENT_LANGUAGE,[Default]), UsedName(REQUEST_ENTITY_TOO_LARGE,[Default]), UsedName(ALLOW,[Default]), UsedName(FORWARDED,[Default]), UsedName(INTERNAL_SERVER_ERROR,[Default]), UsedName(controllers;LoginController;init;,[Default]), UsedName($amp,[Default]), UsedName(Ok,[Default]), UsedName(NotFound,[Default]), UsedName(HTTP_VERSION_NOT_SUPPORTED,[Default]), UsedName(HTTP_1_0,[Default]), UsedName(MOVED_PERMANENTLY,[Default]), UsedName(NO_CONTENT,[Default]), UsedName(controllerComponents,[Default]), UsedName(request2flash,[Implicit]), UsedName(LoginController,[Default]), UsedName(CONTINUE,[Default]), UsedName(ACCEPTED,[Default]), UsedName(HTTP_1_1,[Default]), UsedName(RequestTimeout,[Default]), UsedName(CREATED,[Default]), UsedName(logout,[Default]), UsedName(GatewayTimeout,[Default]), UsedName(ExpectationFailed,[Default]), UsedName(Redirect,[Default]), UsedName(METHOD_NOT_ALLOWED,[Default]), UsedName(ACCEPT_LANGUAGE,[Default]), UsedName(MULTI_STATUS,[Default]), UsedName(PartialContent,[Default]), UsedName($isInstanceOf,[Default]), UsedName(UnprocessableEntity,[Default]), UsedName(X_REQUESTED_WITH,[Default]), UsedName(ORIGIN,[Default]), UsedName(render,[Default]), UsedName(TooManyRequest,[Default]), UsedName(UNSUPPORTED_MEDIA_TYPE,[Default]), UsedName(CONTENT_TRANSFER_ENCODING,[Default]), UsedName(##,[Default]), UsedName(FailedDependency,[Default]), UsedName(AGE,[Default]), UsedName(TEXT,[Default]), UsedName(CONTENT_LENGTH,[Default]), UsedName(notify,[Default]), UsedName(PRECONDITION_FAILED,[Default]), UsedName(XML,[Default]), UsedName(TOO_MANY_REQUEST,[Default]), UsedName(PERMANENT_REDIRECT,[Default]), UsedName(hashCode,[Default]), UsedName(ACCESS_CONTROL_REQUEST_METHOD,[Default]), UsedName(CONTENT_TYPE,[Default]), UsedName(NotModified,[Default]), UsedName(LENGTH_REQUIRED,[Default]), UsedName(finalize,[Default]), UsedName(CONTENT_MD5,[Default]), UsedName(EntityTooLarge,[Default]), UsedName(SERVICE_UNAVAILABLE,[Default]), UsedName(ACCESS_CONTROL_REQUEST_HEADERS,[Default]), UsedName(IF_UNMODIFIED_SINCE,[Default]), UsedName(OK,[Default]), UsedName(CONTENT_RANGE,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ImATeapot,[Default]), UsedName(Redirect$default$3,[Default]), UsedName(Continue,[Default]), UsedName(profile,[Default]), UsedName(Gone,[Default]), UsedName(equals,[Default]), UsedName(PROXY_AUTHORIZATION,[Default]), UsedName(SWITCHING_PROTOCOLS,[Default]), UsedName(UPGRADE,[Default]), UsedName(Forbidden,[Default]), UsedName(CONNECTION,[Default]), UsedName(UnsupportedMediaType,[Default]), UsedName(XHTML,[Default]), UsedName(PRAGMA,[Default]), UsedName(UNPROCESSABLE_ENTITY,[Default]), UsedName(LINK,[Default]), UsedName(LAST_MODIFIED,[Default]), UsedName(UPGRADE_REQUIRED,[Default]), UsedName(IF_NONE_MATCH,[Default]), UsedName(FOUND,[Default]), UsedName(NonAuthoritativeInformation,[Default]), UsedName(Accepted,[Default]), UsedName(IF_MATCH,[Default]), UsedName(USER_AGENT,[Default]), UsedName(BINARY,[Default]), UsedName(EXPIRES,[Default]), UsedName(CONFLICT,[Default]), UsedName(TemporaryRedirect,[Default]), UsedName(ACCEPT_ENCODING,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ACCEPT_CHARSET,[Default]), UsedName(HOST,[Default]), UsedName(PROXY_AUTHENTICATION_REQUIRED,[Default]), UsedName(messagesApi,[Implicit]), UsedName(request2session,[Implicit]), UsedName(NON_AUTHORITATIVE_INFORMATION,[Default]), UsedName(X_FORWARDED_FOR,[Default]), UsedName(ACCESS_CONTROL_ALLOW_CREDENTIALS,[Default]), UsedName(Created,[Default]), UsedName(NOT_MODIFIED,[Default]), UsedName(STRICT_TRANSPORT_SECURITY,[Default]), UsedName(SeeOther,[Default]), UsedName(NOT_ACCEPTABLE,[Default]), UsedName(getClass,[Default]), UsedName(PAYMENT_REQUIRED,[Default]), UsedName(synchronized,[Default]), UsedName(ACCESS_CONTROL_ALLOW_ORIGIN,[Default]), UsedName(NotAcceptable,[Default]), UsedName(FORM,[Default]), UsedName(login,[Default]), UsedName(FORBIDDEN,[Default]), UsedName(wait,[Default]), UsedName(REFERER,[Default]), UsedName(CHUNKED,[Default]), UsedName(SET_COOKIE2,[Default]), UsedName(EVENT_STREAM,[Default]), UsedName(TOO_MANY_REQUESTS,[Default]), UsedName(BAD_REQUEST,[Default]), UsedName(eq,[Default]), UsedName(db,[Default]), UsedName(Unauthorized,[Default]), UsedName(NOT_IMPLEMENTED,[Default]), UsedName(COOKIE,[Default]), UsedName(CACHE_CONTROL,[Default]), UsedName(CONTENT_ENCODING,[Default]), UsedName(TODO,[Default]), UsedName(Action,[Default]), UsedName(PermanentRedirect,[Default]), UsedName(fileMimeTypes,[Implicit]), UsedName(MultiStatus,[Default]), UsedName(CSS,[Default]), UsedName(index,[Default]), UsedName(BadRequest,[Default]), UsedName(ResetContent,[Default]), UsedName(Status,[Default]), UsedName(BAD_GATEWAY,[Default]), UsedName(dbConfig,[Default]), UsedName(Accepts,[Default]), UsedName(register,[Default]), UsedName(MovedPermanently,[Default]), UsedName(ACCESS_CONTROL_ALLOW_HEADERS,[Default]), UsedName(EXPECTATION_FAILED,[Default]), UsedName(SwitchingProtocols,[Default]), UsedName(!=,[Default]), UsedName(UNAUTHORIZED,[Default]), UsedName(PaymentRequired,[Default]), UsedName(parse,[Default]), UsedName(Locked,[Default]), UsedName(REQUEST_URI_TOO_LONG,[Default]), UsedName(MULTIPLE_CHOICES,[Default]), UsedName(WARNING,[Default]), UsedName(NOT_FOUND,[Default]), UsedName(==,[Default]), UsedName(ACCEPT_RANGES,[Default]), UsedName(PreconditionFailed,[Default]), UsedName(CONTENT_LOCATION,[Default]), UsedName(TooManyRequests,[Default]), UsedName(ACCESS_CONTROL_ALLOW_METHODS,[Default]), UsedName(notifyAll,[Default]), UsedName(TRAILER,[Default]), UsedName(ACCESS_CONTROL_MAX_AGE,[Default]), UsedName(TEMPORARY_REDIRECT,[Default]), UsedName(PARTIAL_CONTENT,[Default]), UsedName(INSUFFICIENT_STORAGE,[Default]), UsedName(SERVER,[Default]), UsedName(UriTooLong,[Default]), UsedName(IF_RANGE,[Default]), UsedName(RESET_CONTENT,[Default]), UsedName(ACCEPT,[Default]), UsedName(FROM,[Default]), UsedName(NotImplemented,[Default]), UsedName(driver,[Default]), UsedName(ETAG,[Default]), UsedName(BadGateway,[Default]), UsedName(JAVASCRIPT,[Default]), UsedName(CONTENT_DISPOSITION,[Default]), UsedName(IM_A_TEAPOT,[Default]), UsedName(Conflict,[Default]), UsedName(LOCKED,[Default]), UsedName(toString,[Default]), UsedName(HttpVersionNotSupported,[Default]), UsedName(GATEWAY_TIMEOUT,[Default]))) invalidates 2 classes due to The controllers.LoginController has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(supportedLangs,[Implicit]), UsedName(request2flash,[Implicit]), UsedName(messagesApi,[Implicit]), UsedName(request2session,[Implicit]), UsedName(fileMimeTypes,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(controllers.LoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(router.Routes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.UserUtils...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.UserUtils)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.UserUtils)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.PSController: Set(UsedName(UserUtils,[Default]), UsedName(getUserFromString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.LoginController: Set(UsedName(UserUtils,[Default]), UsedName(getStringFromUser,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getRandomName,[Default]), UsedName(UserUtils,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.UserUtils,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getRandomName,[Default]), UsedName(UserUtils,[Default]), UsedName(clone,[Default]), UsedName(toUserInfo,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(getUserFromString,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(getStringFromUser,[Default]), UsedName(toString,[Default]))) invalidates 4 classes due to The models.UserUtils has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getRandomName,[Default]), UsedName(UserUtils,[Default]), UsedName(clone,[Default]), UsedName(toUserInfo,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(getUserFromString,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(getStringFromUser,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.UserUtils)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.PSController, controllers.LoginController, actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Tables.Users...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.Tables.Users)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Tables.Users)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.UserQueries: Set(UsedName(Users,[Default]), UsedName(username,[Default]), UsedName(id,[Default]), UsedName(TableElementType,[Default]), UsedName(password,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Tables.Users,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(clone,[Default]), UsedName(column,[Default]), UsedName(primaryKeys,[Default]), UsedName(primaryKey,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(Users,[Default]), UsedName($isInstanceOf,[Default]), UsedName(models;Tables;Users;init;,[Default]), UsedName(*,[Default]), UsedName(foreignKeys,[Default]), UsedName(##,[Default]), UsedName(index$default$3,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(asInstanceOf,[Default]), UsedName(username,[Default]), UsedName(equals,[Default]), UsedName(O,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tableName,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(toNode,[Default]), UsedName(indexes,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(tableProvider,[Default]), UsedName(tableConstraints,[Default]), UsedName(id,[Default]), UsedName(encodeRef,[Default]), UsedName(index,[Default]), UsedName(!=,[Default]), UsedName(TableElementType,[Default]), UsedName(==,[Default]), UsedName(foreignKey,[Default]), UsedName(create_*,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(tableNode,[Default]), UsedName(tableTag,[Default]), UsedName(schemaName,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The models.Tables.Users has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(clone,[Default]), UsedName(column,[Default]), UsedName(primaryKeys,[Default]), UsedName(primaryKey,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(Users,[Default]), UsedName($isInstanceOf,[Default]), UsedName(models;Tables;Users;init;,[Default]), UsedName(*,[Default]), UsedName(foreignKeys,[Default]), UsedName(##,[Default]), UsedName(index$default$3,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(asInstanceOf,[Default]), UsedName(username,[Default]), UsedName(equals,[Default]), UsedName(O,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tableName,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(toNode,[Default]), UsedName(indexes,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(tableProvider,[Default]), UsedName(tableConstraints,[Default]), UsedName(id,[Default]), UsedName(encodeRef,[Default]), UsedName(index,[Default]), UsedName(!=,[Default]), UsedName(TableElementType,[Default]), UsedName(==,[Default]), UsedName(foreignKey,[Default]), UsedName(create_*,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(tableNode,[Default]), UsedName(tableTag,[Default]), UsedName(schemaName,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.Tables.Users)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(models.UserQueries)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from views.html.login...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(views.html.login)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(views.html.login)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.LoginController: Set(UsedName(apply,[Default]), UsedName(login,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(views.html.login,ModifiedNames(changes = UsedName(format,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(f,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(render,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(ref,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(login,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(_display_,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The views.html.login has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(format,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(f,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(render,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(ref,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(login,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(_display_,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(views.html.login)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.LoginController)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Tables...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of models.UserQueries: Set(UsedName(Tables,[Default]), UsedName(Users,[Default]), UsedName(users,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Tables,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Tables,[Default]), UsedName(Users,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(profile,[Default]), UsedName(equals,[Default]), UsedName(users,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The models.Tables has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Tables,[Default]), UsedName(Users,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(profile,[Default]), UsedName(equals,[Default]), UsedName(users,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(models.UserQueries)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from controllers.routes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(controllers.routes)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(controllers.routes)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.PSController: Set(UsedName(routes,[Default]), UsedName(PSController,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.LoginController: Set(UsedName(routes,[Default]), UsedName(PSController,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of views.html.login: Set(UsedName(routes,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(controllers.routes,ModifiedNames(changes = UsedName(javascript,[Default]), UsedName(Assets,[Default]), UsedName(controllers;routes;init;,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(WSController,[Default]), UsedName(equals,[Default]), UsedName(routes,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(PSController,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 4 classes due to The controllers.routes has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(javascript,[Default]), UsedName(Assets,[Default]), UsedName(controllers;routes;init;,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(WSController,[Default]), UsedName(equals,[Default]), UsedName(routes,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(PSController,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(controllers.routes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.PSController, controllers.LoginController, views.html.login)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.PSUser...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.PSUser)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.PSUser)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.PSUser,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getRandomName,[Default]), UsedName($init$,[Default]), UsedName(models;PSUser;init;,[Default]), UsedName(clone,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(name,[Default]), UsedName(canEqual,[Default]), UsedName(unapply,[Default]), UsedName(PSUser,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.PSUser has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(getRandomName,[Default]), UsedName($init$,[Default]), UsedName(models;PSUser;init;,[Default]), UsedName(clone,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(name,[Default]), UsedName(canEqual,[Default]), UsedName(unapply,[Default]), UsedName(PSUser,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.PSUser)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.PSMessage.Types...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.PSMessage.Types)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.PSMessage.Types)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.PSMessage.Types,ModifiedNames(changes = UsedName(addParticles,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(addMember,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(initSelf,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(nullMsg,[Default]), UsedName(removeMember,[Default]), UsedName(syncCanvas,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.PSMessage.Types has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addParticles,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(addMember,[Default]), UsedName(Types,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(initSelf,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(nullMsg,[Default]), UsedName(removeMember,[Default]), UsedName(syncCanvas,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.PSMessage.Types)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.RockParticleAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.RockParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.RockParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.RockParticleAction,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;RockParticleAction;init;,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(RockParticleAction,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.RockParticleAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;RockParticleAction;init;,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(RockParticleAction,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.RockParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.MessageUtil...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.MessageUtil)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.MessageUtil)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(parseJsonOpt,[Default]), UsedName(MessageUtil,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.MessageUtil,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(parseJsonOpt,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(MessageUtil,[Default]))) invalidates 2 classes due to The models.MessageUtil has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(parseJsonOpt,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(MessageUtil,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.MessageUtil)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.NewUser...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.NewUser)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.NewUser)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controllers.LoginController: Set(UsedName(NewUser,[Default]), UsedName(username,[Default]), UsedName(password,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of views.html.login: Set(UsedName(NewUser,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.NewUser,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(##,[Default]), UsedName(models;NewUser;init;,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(NewUser,[Default]), UsedName(productArity,[Default]), UsedName(username,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]))) invalidates 3 classes due to The models.NewUser has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(##,[Default]), UsedName(models;NewUser;init;,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(NewUser,[Default]), UsedName(productArity,[Default]), UsedName(username,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(password,[Default]), UsedName(notifyAll,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.NewUser)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controllers.LoginController, views.html.login)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.WaterParticleAction...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.WaterParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.WaterParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.WaterParticleAction,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(WaterParticleAction,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(models;WaterParticleAction;init;,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The models.WaterParticleAction has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(WaterParticleAction,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(yPos,[Default]), UsedName(finalize,[Default]), UsedName(xPos,[Default]), UsedName(asInstanceOf,[Default]), UsedName(timeAddedMillis,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(models;WaterParticleAction;init;,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.WaterParticleAction)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from actors.WSActor.WSActorRef...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(actors.WSActor.WSActorRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(actors.WSActor.WSActorRef)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSManager: Set(UsedName(user,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of actors.WSManager.NewActor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of actors.WSManager.RemoveActor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(actors.WSActor.WSActorRef,ModifiedNames(changes = UsedName(user,[Default]), UsedName(actors;WSActor;WSActorRef;init;,[Default]))) invalidates 2 classes due to The actors.WSActor.WSActorRef has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(user,[Default]), UsedName(actors;WSActor;WSActorRef;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(actors.WSActor.WSActorRef)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSManager)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.InitSelfMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.InitSelfMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.InitSelfMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of actors.WSActor: Set(UsedName(getJsValue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(models;InitSelfMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(id,[Default]), UsedName(InitSelfMessage,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.InitSelfMessage,ModifiedNames(changes = UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(models;InitSelfMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(InitSelfMessage,[Default]), UsedName(!=,[Default]), UsedName(selfUser,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The models.InitSelfMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getJsValue,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(models;InitSelfMessage;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(InitSelfMessage,[Default]), UsedName(!=,[Default]), UsedName(selfUser,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.InitSelfMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(actors.WSActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(actors.WSActor, actors.WSManager)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(actors.WSActor, actors.WSManager)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding actors.WSManager by actors.WSActor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding controllers.WSController by actors.WSManager[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding router.Routes by controllers.WSController[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding actors.WSManager.NewActor by actors.WSActor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding actors.WSManager.RemoveActor by actors.WSActor[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(router.Routes)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
